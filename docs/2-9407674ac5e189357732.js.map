{"version":3,"sources":["webpack:///./src/components/AppContext.js","webpack:///./src/reducers/appReducer.js","webpack:///./src/configuration/initialRowControl.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Gear.js","webpack:///./src/components/RowControl.js","webpack:///./src/components/SearchInput.js","webpack:///./src/components/SortControl.js","webpack:///./src/components/ControlPanel.js","webpack:///./src/components/Album.js","webpack:///./src/components/AlbumDetail.js","webpack:///./src/components/CoverView.js","webpack:///./src/components/ListView.js","webpack:///./src/components/Visualizations.js","webpack:///./src/components/App.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["AppContext","React","createContext","AppProvider","Provider","Consumer","appReducer","state","action","appState","Object","assign","type","filteredAlbums","_filter","allAlbums","album","title","includes","filter","toLowerCase","field_genre","keys","rowControl","map","key","parseInt","length","active","disabled","rows","_orderBy","column","order","selectedSort","selectedList","newRows","initialRowControl","5","10","25","50","PropTypes","object","string","isRequired","func","GearIcon","styled","Icon","withConfig","displayName","componentId","Gear","react_default","a","createElement","iconName","RowControlWrapper","div","RowControl","props","data","useContext","dispatchApp","label","className","buttons","onClick","SearchInputWrapper","SearchInput","setSelectedAlbum","placeholder","dir","onChange","e","target","value","SortControl","sortOptions","sortControl","options","sortAlbums","field","none","defaultSort","field_artist","field_album","field_avg","field_cons_score","field_lists","field_top_10s","field_wt_avg","sortControlList2017","rtrade_list","q_list","rstone_list","paste_list","nme_list","mojo_list","drwnd_list","cos_list","uncut_list","skinny_list","cmplx_list","crack_list","gvsb_list","noisey_list","quietus_list","strgum_list","uproxx_list","vnlfct_list","wire_list","popmat_list","pfork_list","npr_list","spin_list","line_list","tmt_list","altern_list","fact_list","sortControlList2018","billbrd_list","mscomh_list","405_list","blare_list","earbud_list","giitv_list","treble_list","vinfac_list","guard_list","components_ControlPanel","sortControlList","year","header","gatsby_link_default","to","href","rel","activeAlbum","css","li","ol","controlPanelExpanded","Tabs2","__webpack_exports__","allNodeAlbum","nodes","useEffect","title_display","parseFloat","field_id","field_genre_display","field_list_rankings","forEach","list","listRank","split","isNaN","concat","initialAppState","_useReducer","useReducer","_useState","useState","selectedAlbum","Helmet","src","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","propTypes","shape","pathname"],"mappings":"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","file":"2-9407674ac5e189357732.js","sourcesContent":["import React from 'react'\n\nconst AppContext = React.createContext({})\n\nexport const AppProvider = AppContext.Provider\nexport const AppConsumer = AppContext.Consumer\nexport default AppContext","import _filter from 'lodash/filter';\nimport _orderBy from 'lodash/orderBy';\n\nexport default function appReducer(state, action) {\n  const appState = {...state}\n  switch (action.type) {\n    case 'filter':\n      appState.filteredAlbums = _filter(appState.allAlbums, function(album) {\n        return album.title.includes(action.filter.toLowerCase()) || album.field_genre.includes(action.filter.toLowerCase());\n      })\n\n      // Update row control for button group.\n      Object.keys(appState.rowControl).map(key => {\n        // Set active if we're displaying the same number of rows as a row control option.\n        if (parseInt(key, 10) === appState.filteredAlbums.length) {\n          appState.rowControl[key].active = true;\n          appState.rowControl[key].disabled = false;\n        }\n        else {\n          appState.rowControl[key].active = false;\n          // Disable row control options if we have fewer rows than needed.\n          if (parseInt(key, 10) > appState.filteredAlbums.length) {\n            appState.rowControl[key].disabled = true;\n          }\n          else {\n            appState.rowControl[key].disabled = false;\n          }\n        }\n        return appState.rowControl;\n      })\n      // Change the rows accordingly\n      if (appState.filteredAlbums.length > 50) {\n        appState.rows = 50\n      }\n      else {\n        appState.rows = appState.filteredAlbums.length\n      }\n      // TODO - Maintain sort while filtering.\n      return appState\n    case 'sort':\n      appState.filteredAlbums = _orderBy(appState.filteredAlbums, action.column, action.order)\n      appState.selectedSort = action.column\n      appState.selectedList = 'none'\n      // TODO - why is this 560 albums and not the correct amount of albums?\n      //console.log(appState.filteredAlbums)\n     return appState\n    case 'list':\n      appState.filteredAlbums = _orderBy(appState.filteredAlbums, action.column, action.order)\n      appState.selectedList = action.column\n      appState.selectedSort = 'none'\n      return appState\n    case 'set rows':\n      // Update row control display\n      Object.keys(appState.rowControl).map(key => {\n        if (parseInt(key, 10) === action.newRows) {\n          appState.rowControl[key].active = true;\n        }\n        else {\n          appState.rowControl[key].active = false;\n        }\n        return appState.rowControl;\n      })\n      // Set the active number of rows\n      appState.rows = action.newRows\n      return appState\n    default:\n      return state\n  }\n}","const initialRowControl = {\n  5: {\n    rows: 5,\n    active: false,\n    disabled: false\n  },\n  10: {\n    rows: 10,\n    active: false,\n    disabled: false\n  },\n  25: {\n    rows: 25,\n    active: false,\n    disabled: false\n  },\n  50: {\n    rows: 50,\n    active: true,\n    disabled: false\n  }\n}\n\nexport default initialRowControl","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Icon } from \"@blueprintjs/core\";\n\n// Example of styling an existing 3rd party component.\nconst GearIcon = styled(Icon)`\n  opacity: 1 !important;\n  font-size: 2.5rem !important;\n  color: black;\n`;\n\nexport default () => {\n  return(\n    <GearIcon iconName=\"pt-icon-cog\" />\n  )\n}\n","import React, {useContext} from 'react';\nimport styled from 'styled-components';\n\nimport AppContext from \"./AppContext\"\n\nimport { Button } from \"@blueprintjs/core\";\n\nconst RowControlWrapper = styled.div`\n margin-bottom: 1rem;\n`;\n\nexport default(props) => {\n  // TODO - feels like we want to have seperate providers here so we can get only what\n  // we need.\n  // Also might be a place where we should use a container component to manage state.\n  const data = useContext(AppContext)\n  const rowControl = data.appState.rowControl\n  const dispatchApp = data.dispatchApp\n\n  return(\n    <RowControlWrapper>\n      <p>{props.label}</p>\n      <div className=\"pt-button-group pt-large pt-fill\">\n        {Object.keys(rowControl).map(key =>\n          <Button\n            key={key}\n            active={rowControl[key].active}\n            disabled={rowControl[key].disabled}\n            onClick={() => dispatchApp({type: 'set rows', newRows: rowControl[key].rows})}\n          >\n            {key}\n          </Button>\n        )}\n      </div>\n    </RowControlWrapper>\n  )\n}\n\n// TODO - Prop Types","import React, {useContext} from 'react';\nimport styled from 'styled-components';\n\nimport AppContext from \"./AppContext\"\n\nconst SearchInputWrapper = styled.div`\n margin-bottom: 1rem;\n`;\n\nexport default (props) => {\n  const data = useContext(AppContext)\n  const dispatchApp = data.dispatchApp\n  const setSelectedAlbum = data.setSelectedAlbum\n\n  return(\n    <SearchInputWrapper className=\"pt-input-group pt-large pt-minimal\">\n      <span className=\"pt-icon pt-icon-search\"></span>\n      <input\n        className=\"pt-input\"\n        type=\"search\"\n        placeholder={props.placeholder}\n        dir=\"auto\"\n        onChange={(e) => {\n          // TODO - Set selected album needs to be merged main app reducer\n          setSelectedAlbum('0')\n          dispatchApp({type: 'filter', filter: e.target.value})\n        }}\n      />\n    </SearchInputWrapper>\n  )\n}\n\n// TODO - Prop types\n","import React from 'react';\n\nexport default (props) => {\n  const sortOptions = Object.keys(props.sortControl.options);\n\n  return(\n    <label className=\"pt-label\">\n      {props.label}\n      <div className=\"pt-select pt-minimal pt-large\">\n        <select value={props.value} onChange={props.sortAlbums}>\n          {sortOptions.map(key =>\n            <option\n              key={key}\n              value={props.sortControl.options[key].field}\n            >\n              {props.sortControl.options[key].label}\n            </option>\n          )}\n        </select>\n      </div>\n    </label>\n  )\n\n}\n\n// TODO - Prop Types\n","import React, {useContext} from \"react\"\nimport { Link } from \"gatsby\"\n\nimport AppContext from \"./AppContext\"\n\nimport Gear from './Gear'\nimport RowControl from './RowControl'\nimport SearchInput from './SearchInput'\nimport SortControl from './SortControl'\n\nimport './ControlPanel.css';\n\n// TODO - Change both sorts to app state so it is easier to change this per year\nconst sortControl = {\n  options: {\n    none: {field: 'none', label: 'None', defaultSort: 'asc'},\n    field_artist: {field: 'field_artist', label: 'Artist', defaultSort: 'asc'},\n    field_album: {field: 'field_album', label: 'Album', defaultSort: 'asc'},\n    field_genre: {field: 'field_genre', label: 'Genre', defaultSort: 'asc'},\n    field_avg: {field: 'field_avg', label: 'Average', defaultSort: 'asc'},\n    field_cons_score: {field: 'field_cons_score', label: 'Consensus Score', defaultSort: 'asc'},\n    field_lists: {field: 'field_lists', label: 'Lists', defaultSort: 'desc'},\n    field_top_10s: {field: 'field_top_10s', label: 'Top Ten', defaultSort: 'desc'},\n    field_wt_avg: {field: 'field_wt_avg', label: 'Weighted Average', defaultSort: 'asc'}\n  }\n}\n\n// TODO - This needs to be updated for 2018\nconst sortControlList2017 = {\n  options: {\n    none: {field: 'none', label: 'None', defaultSort: 'asc'},\n    rtrade_list: {field: 'rtrade_list', label: 'Rough Trade', defaultSort: 'asc'},\n    q_list: {field: 'q_list', label: 'Q', defaultSort: 'asc'},\n    rstone_list: {field: 'rstone_list', label: 'Rolling Stone', defaultSort: 'asc'},\n    paste_list: {field: 'paste_list', label: 'Paste', defaultSort: 'asc'},\n    nme_list: {field: 'nme_list', label: 'NME', defaultSort: 'asc'},\n    mojo_list: {field: 'mojo_list', label: 'Mojo', defaultSort: 'asc'},\n    drwnd_list: {field: 'drwnd_list', label: 'Drowned in Sound', defaultSort: 'asc'},\n    cos_list: {field: 'cos_list', label: 'Consequence of Sound', defaultSort: 'asc'},\n    uncut_list: {field: 'uncut_list', label: 'Uncut', defaultSort: 'asc'},\n    skinny_list: {field: 'skinny_list', label: 'The Skinny', defaultSort: 'asc'},\n    cmplx_list: {field: 'cmplx_list', label: 'Complex', defaultSort: 'asc'},\n    crack_list: {field: 'crack_list', label: 'Crack Magazine', defaultSort: 'asc'},\n    gvsb_list: {field: 'gvsb_list', label: 'Gorilla vs Bear', defaultSort: 'asc'},\n    noisey_list: {field: 'noisey_list', label: 'Noisey', defaultSort: 'asc'},\n    quietus_list: {field: 'quietus_list', label: 'The Quietus', defaultSort: 'asc'},\n    strgum_list: {field: 'strgum_list', label: 'Stereogum', defaultSort: 'asc'},\n    uproxx_list: {field: 'uproxx_list', label: 'Uproxx', defaultSort: 'asc'},\n    vnlfct_list: {field: 'vnlfct_list', label: 'The Vinyl Factory', defaultSort: 'asc'},\n    wire_list: {field: 'wire_list', label: 'Wire', defaultSort: 'asc'},\n    popmat_list: {field: 'popmat_list', label: 'Pop Matters', defaultSort: 'asc'},\n    pfork_list: {field: 'pfork_list', label: 'Pitchfork', defaultSort: 'asc'},\n    npr_list: {field: 'npr_list', label: 'NPR', defaultSort: 'asc'},\n    spin_list: {field: 'spin_list', label: 'Spin', defaultSort: 'asc'},\n    line_list: {field: 'line_list', label: 'Line', defaultSort: 'asc'},\n    tmt_list: {field: 'tmt_list', label: 'Tiny Mix Tapes', defaultSort: 'asc'},\n    altern_list: {field: 'altern_list', label: 'The Alternative', defaultSort: 'asc'},\n    fact_list: {field: 'fact_list', label: 'Fact', defaultSort: 'asc'}\n  }\n}\n\n// TODO - Refactor this list to be generated from the initial dataset\nconst sortControlList2018 = {\n  options: {\n    none: {field: 'none', label: 'None', defaultSort: 'asc'},\n    rtrade_list: {field: 'rtrade_list', label: 'Rough Trade', defaultSort: 'asc'},\n    uncut_list: {field: 'uncut_list', label: 'Uncut', defaultSort: 'asc'},\n    mojo_list: {field: 'mojo_list', label: 'Mojo', defaultSort: 'asc'},\n    cos_list: {field: 'cos_list', label: 'Consequence of Sound', defaultSort: 'asc'},\n    line_list: {field: 'line_list', label: 'Line', defaultSort: 'asc'},\n    npr_list: {field: 'npr_list', label: 'NPR', defaultSort: 'asc'},\n    quietus_list: {field: 'quietus_list', label: 'The Quietus', defaultSort: 'asc'},\n    strgum_list: {field: 'strgum_list', label: 'Stereogum', defaultSort: 'asc'},\n    uproxx_list: {field: 'uproxx_list', label: 'Uproxx', defaultSort: 'asc'},\n    billbrd_list: {field: 'billbrd_list', label: 'Billboard', defaultSort: 'asc'},\n    cmplx_list: {field: 'cmplx_list', label: 'Complex', defaultSort: 'asc'},\n    crack_list: {field: 'crack_list', label: 'Crack Magazine', defaultSort: 'asc'},\n    mscomh_list: {field: 'mscomh_list', label: 'MusicOMH', defaultSort: 'asc'},\n    noisey_list: {field: 'noisey_list', label: 'Noisey', defaultSort: 'asc'},\n    pfork_list: {field: 'pfork_list', label: 'Pitchfork', defaultSort: 'asc'},\n    popmat_list: {field: 'popmat_list', label: 'Pop Matters', defaultSort: 'asc'},\n    wire_list: {field: 'wire_list', label: 'Wire', defaultSort: 'asc'},\n    nme_list: {field: 'nme_list', label: 'NME', defaultSort: 'asc'},\n    spin_list: {field: 'spin_list', label: 'Spin', defaultSort: 'asc'},\n    rstone_list: {field: 'rstone_list', label: 'Rolling Stone', defaultSort: 'asc'},\n    '405_list': {field: '405_list', label: '405', defaultSort: 'asc'},\n    altern_list: {field: 'altern_list', label: 'The Alternative', defaultSort: 'asc'},\n    blare_list: {field: 'blare_list', label: 'Blare', defaultSort: 'asc'},\n    earbud_list: {field: 'earbud_list', label: 'Earbud', defaultSort: 'asc'},\n    fact_list: {field: 'fact_list', label: 'Fact', defaultSort: 'asc'},\n    giitv_list: {field: 'giitv_list', label: 'God is in the TV', defaultSort: 'asc'},\n    q_list: {field: 'q_list', label: 'Q', defaultSort: 'asc'},\n    tmt_list: {field: 'tmt_list', label: 'Tiny Mix Tapes', defaultSort: 'asc'},\n    treble_list: {field: 'treble_list', label: 'Treble', defaultSort: 'asc'},\n    vinfac_list: {field: 'vinfac_list', label: 'The Vinyl Factory', defaultSort: 'asc'},\n    guard_list: {field: 'guard_list', label: 'The Guardian', defaultSort: 'asc'}\n  }\n}\n\nexport default (props) => {\n  const data = useContext(AppContext)\n  const selectedSort = data.appState.selectedSort\n  const selectedList = data.appState.selectedList\n  const dispatchApp = data.dispatchApp\n  const year = data.appState.year\n\n  let sortControlList\n  if (year === 2017) {\n    sortControlList = sortControlList2017\n  }\n  if (year === 2018) {\n    sortControlList = sortControlList2018\n  }\n  \n  return(\n    <div className=\"control-panel\">\n      <Gear />\n      <h2>{props.header}</h2>\n      <RowControl\n        label=\"Number of Results:\"\n      />\n      <SearchInput\n        placeholder=\"Filter by Album, Artist or Genre\"\n      />\n      <SortControl\n        label=\"Sort by:\"\n        sortControl={sortControl}\n        value={selectedSort}\n        sortAlbums={(e) => dispatchApp({type: 'sort', column: e.target.value, order: sortControl.options[e.target.value].defaultSort})}\n      />\n      <SortControl\n        label=\"View List:\"\n        sortControl={sortControlList}\n        value={selectedList}\n        sortAlbums={(e) => dispatchApp({type: 'list', column: e.target.value, order: sortControlList.options[e.target.value].defaultSort})}\n      />\n      <h4>Jump to: <Link to=\"/2018\">2018</Link> / <Link to=\"/2017\">2017</Link></h4>\n      <p>Data: <a href=\"http://robmitchum.github.io/aotysheets.html\" target=\"_blank\" rel=\"noopener noreferrer\">Album of the Year List Project</a></p>\n    </div>\n  )\n}\n\n// TODO - Prop Types","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst AlbumRow = styled.div`\n\tmargin-top: 1rem;\n\t:first-child {\n\t  margin-top: .05rem;\n\t}\n\t:last-child {\n\t  margin-bottom: 1rem;\n\t}\n\n  ${props => props.activeAlbum && css`\n    border: 1px solid dodgerblue;\n  `}\n`;\n\nconst Number = styled.li`\n\tmargin-left: 1rem;\n\tline-height: 1.25;\n  font-size: 16px;\n`;\nconst AlbumSection = styled.div`\n\tdisplay: inline-block;\n\tmargin-left: .5rem;\n\tmargin-right: .5rem;\n\timg {\n\t  border: 1px solid dodgerblue;\n\t}\n\tdiv {\n\t  color: dodgerblue;\n\t}\n\th4 {\n\t  margin-bottom: 5px;\n\t}\n`;\n\n// Todo - Convert album to be functional component\n\nexport default (props) => {\n    if (props.coverImage) {\n      return(\n        <AlbumRow\n          onClick={() => props.selectAlbum(props.selectedAlbum)}\n          className=\"pt-card pt-interactive\"\n          activeAlbum={props.activeAlbum}\n        >\n          <Number>\n            <AlbumSection>\n              <img\n                src={props.coverImage}\n                alt={props.title}\n              />\n            </AlbumSection>\n            <AlbumSection>\n              <div className=\"pt-ui-text-large\">{props.artist}</div>\n              <h4>{props.title}</h4>\n            </AlbumSection>\n          </Number>\n        </AlbumRow>\n      )\n    }\n    else {\n      return(\n        <AlbumRow\n          onClick={() => props.selectAlbum(props.selectedAlbum)}\n          className=\"pt-card pt-elevation-1 pt-interactive\"\n        >\n          <Number>\n            <AlbumSection>\n              <div className=\"pt-ui-text-large\">{props.artist}</div>\n              <h4>{props.title}</h4>\n            </AlbumSection>\n          </Number>\n        </AlbumRow>\n      )\n    }\n\n}\n\n// Todo - Prop types","import React from 'react';\nimport styled from 'styled-components';\n// Todo - Handle Rankings\nimport Ranking from './Ranking';\n\nconst AlbumContainer = styled.div`\n  width: 40%;\n  height: 91vh;\n  float: left;\n  padding-left: 1rem;\n  padding-bottom: 1rem;\n  overflow: scroll;\n  overflow-wrap: break-word;\n  hyphens: auto;\n  .pt-callout {\n    max-width: 324px;\n    margin-right: 1.25rem;\n    border: 1px solid dodgerblue;\n  }\n  h4 {\n    color: dodgerblue;\n  }\n  img {\n    max-width: 100%;\n    border: 1px solid white;\n  }\n`;\n\nexport default (props) => {\n  // TODO - Make year part of app state\n  let cover = null;\n  if (props.album.field_cover_image_large) {\n    cover = <img\n      src={props.album.field_cover_image_large}\n      alt={props.album.title}\n    />;\n  }\n  return(\n    <AlbumContainer>\n      <div className=\"pt-callout pt-intent-primary\">\n        <h4>{props.album.field_artist}</h4>\n        <h2>{props.album.field_album}</h2>\n        <p>{props.album.field_genre_display}</p>\n        {cover}\n        <p className=\"pt-ui-text-large\"><a href={'https://open.spotify.com/album/' + props.album.field_spotify_album_id} target=\"_blank\" rel=\"noopener noreferrer\">Play on Spotify</a></p>\n        <Ranking list=\"rtrade\" rank={props.album.rtrade_list} />\n        <Ranking list=\"q\" rank={props.album.q_list} />\n        <Ranking list=\"rstone\" rank={props.album.rstone_list} />\n        <Ranking list=\"paste\" rank={props.album.paste_list} />\n        <Ranking list=\"nme\" rank={props.album.nme_list} />\n        <Ranking list=\"mojo\" rank={props.album.mojo_list} />\n        <Ranking list=\"drwnd\" rank={props.album.drwnd_list} />\n        <Ranking list=\"cos\" rank={props.album.cos_list} />\n        <Ranking list=\"uncut\" rank={props.album.uncut_list} />\n        <Ranking list=\"skinny\" rank={props.album.skinny_list} />\n        <Ranking list=\"cmplx\" rank={props.album.cmplx_list} />\n        <Ranking list=\"crack\" rank={props.album.crack_list} />\n        <Ranking list=\"gvsb\" rank={props.album.gvsb_list} />\n        <Ranking list=\"noisey\" rank={props.album.noisey_list} />\n        <Ranking list=\"quietus\" rank={props.album.quietus_list} />\n        <Ranking list=\"strgum\" rank={props.album.strgum_list} />\n        <Ranking list=\"uproxx\" rank={props.album.uproxx_list} />\n        <Ranking list=\"vnlfct\" rank={props.album.vnlfct_list} />\n        <Ranking list=\"wire\" rank={props.album.wire_list} />\n        <Ranking list=\"popmat\" rank={props.album.popmat_list} />\n        <Ranking list=\"pfork\" rank={props.album.pfork_list} />\n        <Ranking list=\"npr\" rank={props.album.npr_list} />\n        <Ranking list=\"spin\" rank={props.album.spin_list} />\n        <Ranking list=\"line\" rank={props.album.line_list} />\n        <Ranking list=\"tmt\" rank={props.album.tmt_list} />\n        <Ranking list=\"altern\" rank={props.album.altern_list} />\n        <Ranking list=\"fact\" rank={props.album.fact_list} />\n      </div>\n    </AlbumContainer>\n  )\n}\n\n// Todo - Prop types","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport AppContext from \"./AppContext\"\nimport Album from './Album';\nimport AlbumDetail from './AlbumDetail';\n\n// TODO - This should probably be in a seperate file.\nexport const AlbumList = styled.ol`\n width: 60%;\n float: left;\n overflow: scroll;\n height: 91vh;\n padding-left: 1px;\n padding-right: 1.5rem;\n margin-top: 0;\n`;\n\n// TODO - Is it necessary to explicitly default export here? Const instead?\n// What is the React convention vs. what is the Gatsby convention?\n\nexport default () => {\n  const data = useContext(AppContext)\n  const albums = data.appState.filteredAlbums\n  const rows = data.appState.rows\n  const selectedAlbum = data.selectedAlbum\n  const setSelectedAlbum = data.setSelectedAlbum\n\n  // Todo - Handle album click interations\n  if (albums.length > 0) {\n    return (\n      <>\n        <AlbumList>\n          {Object.keys(albums).slice(0, rows).map(key =>\n            <Album\n              key={key}\n              artist={albums[key].field_artist}\n              title={albums[key].field_album}\n              albumId={albums[key].field_spotify_album_id}\n              coverImage={albums[key].field_cover_image}\n              activeAlbum={selectedAlbum === key}\n              selectedAlbum={key}\n              selectAlbum={setSelectedAlbum}\n            />\n          )}\n        </AlbumList>\n        <AlbumDetail\n          album={albums[selectedAlbum]}\n        />\n      </>\n    )\n  }\n  else {\n    return (\n      <>\n        Search returned no results. Maybe no one likes your favorite album?\n      </>\n    )\n  }\n\n}\n\n// TODO - Prop Types","import React, {useContext} from 'react';\nimport styled, { css } from 'styled-components';\nimport { ResponsiveHeatMapCanvas } from '@nivo/heatmap';\n\nimport AppContext from \"./AppContext\"\n\nconst HeatMapWrapper = styled.div`\n  height: 98vh;\n  width: 95vw;\n\n  ${props => props.controlPanelExpanded && css`\n    width: 75vw;\n  `}\n`;\n\nexport default () => {\n  const data = useContext(AppContext)\n  const albums = data.appState.filteredAlbums\n  const rows = data.appState.rows\n  const year = data.appState.year\n\n  const defaultData = albums.slice(0, rows)\n\n  const heatmapData = [];\n\n  defaultData.forEach(function(album){\n    heatmapData.push(album);\n  })\n  let keys = []\n  if (year === 2018) {\n    keys = [\n      \"rtrade\",\n      \"q\"\n    ]\n  }\n  else {\n    keys = [\n      \"rtrade\",\n      \"q\",\n      \"rstone\",\n      \"paste\",\n      \"nme\",\n      \"mojo\",\n      \"drwnd\",\n      \"cos\",\n      \"uncut\",\n      \"skinny\",\n      \"cmplx\",\n      \"crack\",\n      \"gvsb\",\n      \"noisey\",\n      \"quietus\",\n      \"strgum\",\n      \"uproxx\",\n      \"vnlfct\",\n      \"wire\",\n      \"popmat\",\n      \"pfork\",\n      \"npr\",\n      \"spin\",\n      \"line\",\n      \"tmt\",\n      \"altern\",\n      \"fact\"\n    ]\n  }\n  // TODO - Handle controlPanelExpanded\n  // Todo - update keys and have an if statement per year\n\n  return(\n    <HeatMapWrapper controlPanelExpanded={false}>\n      <ResponsiveHeatMapCanvas\n        data={heatmapData}\n        keys={keys}\n        indexBy=\"title_display\"\n        margin={{\n          \"top\": 50,\n          \"right\": 60,\n          \"bottom\": 60,\n          \"left\": 250\n        }}\n        forceSquare={false}\n        axisTop={{\n          \"orient\": \"top\",  \n          \"tickSize\": 5,\n          \"tickPadding\": 5,\n          \"tickRotation\": -90,\n          \"legend\": \"\",\n          \"legendOffset\": 36\n        }}\n        axisLeft={{\n          \"orient\": \"left\",\n          \"tickSize\": 5,\n          \"tickPadding\": 5,\n          \"tickRotation\": 0,\n          \"legendPosition\": \"middle\",\n          \"legendOffset\": -40\n        }}\n        cellOpacity={1}\n        cellBorderColor=\"inherit:darker(0.4)\"\n        labelTextColor=\"#000000\"\n        defs={[\n          {\n            \"id\": \"lines\",\n            \"type\": \"patternLines\",\n            \"background\": \"inherit\",\n            \"color\": \"rgba(0, 0, 0, 0.1)\",\n            \"rotation\": -45,\n            \"lineWidth\": 4,\n            \"spacing\": 7\n          }\n        ]}\n        fill={[\n          {\n            \"id\": \"lines\"\n          }\n        ]}\n        animate={true}\n        motionStiffness={80}\n        motionDamping={9}\n        hoverTarget=\"rowColumn\"\n        cellHoverOthersOpacity={0.25}\n        colors=\"blues\"\n        minValue={1}\n        maxValue={50}\n      />\n    </HeatMapWrapper>\n  )\n\n}\n\n// Todo - Prop Types","import React from \"react\"\nimport styled, { css } from 'styled-components';\nimport { Tab2, Tabs2 } from \"@blueprintjs/core\";\n\nimport CoverView from \"./CoverView\"\nimport ListView from \"./ListView\";\n\nconst VisualizationTabs = styled(Tabs2)`\n\tmargin-left: 75px;\n  padding: .5rem 1rem 1rem 1rem;\n  height: 100vh;\n  overflow: hidden;\n  transition: all 0.2s ease-out;\n  \n  ${props => props.controlPanelExpanded && css`\n    margin-left: 25%;\n    transition: all 0.2s ease-in;\n  `}\n`;\n\nexport default () => {\n  // TODO - Incorporate list and table view components\n\n  return(\n    <VisualizationTabs id=\"Tabs\" renderActiveTabPanelOnly=\"true\">\n      <Tab2 id=\"cv\" title=\"Covers\" panel={<CoverView />} />\n      <Tab2 id=\"lv\" title=\"Lists\" panel={<ListView />} />\n    </VisualizationTabs>\n  )\n}\n\n// TODO - Prop Types","// Dependencies\nimport React, { useEffect, useReducer, useState } from \"react\"\nimport { Helmet } from 'react-helmet'\nimport _orderBy from 'lodash/orderBy';\n\n// State and Context helpers\nimport { AppProvider } from '../components/AppContext'\nimport appReducer from '../reducers/appReducer'\n\n// Settings\nimport initialRowControl from '../configuration/initialRowControl'\n\n// Components\nimport ControlPanel from \"../components/ControlPanel\"\nimport Visualizations from \"../components/Visualizations\"\n\n// Styling\n// Todo - Add global style for body margins\nimport '@blueprintjs/core/dist/blueprint.css';\n\nexport default (data) => {\n  // TODO - Bug - Album detail isn't re-rendering when this side effect completes.\n  \n  // Copy source data so we can manipulate it\n  const allAlbums = data.allAlbums.allNodeAlbum.nodes\n  // TODO - see if we can avoid using let here, seems like this variable would be reset every time\n  // for no real reason.\n  // TODO - Change from filteredAlbums to activeAlbums\n  let filteredAlbums = data.allAlbums.allNodeAlbum.nodes\n\n  // Use a side effect to prepare album data, only during initial mount\n  useEffect(() => {\n    allAlbums.map((value, key) => {\n      value.title_display = value.title;\n      value.title = value.title.toLowerCase();\n      // Cast ranking values\n      value.field_avg = parseFloat(value.field_avg)\n      value.field_cons_score = parseFloat(value.field_cons_score)\n      // Why parse the ID here?\n      value.field_id = parseInt(value.field_id, 10)\n      value.field_lists = parseInt(value.field_lists, 10)\n      value.field_top_10s = parseInt(value.field_top_10s, 10)\n      value.field_wt_avg = parseFloat(value.field_wt_avg)\n\n      // Protect from empty genre fields and lowercase for search\n      if (!value.field_genre) {\n        value.field_genre = 'n/a';\n      }\n      else {\n        value.field_genre_display = value.field_genre;\n        value.field_genre = value.field_genre.toLowerCase();\n      }\n\n      // flatten list ranking values\n      value.field_list_rankings.forEach(function(list) {\n        const listRank = list.split(':');\n        // TODO - find a way to handle 0 values rather than this 101/'' hack.\n        value[listRank[0] + '_list'] = isNaN(parseInt(listRank[1], 10)) ? 101 : parseInt(listRank[1], 10);\n        value[listRank[0]] = isNaN(parseInt(listRank[1], 10)) ? '' : parseInt(listRank[1], 10);\n      })\n      return value\n    })\n    filteredAlbums = _orderBy([...allAlbums], 'field_cons_score', 'asc')\n  }, [])\n\n  const initialAppState = {\n    allAlbums,\n    filteredAlbums,\n    rowControl: initialRowControl,\n    selectedSort: 'field_cons_score',\n    selectedList: 'none',\n    rows: 50,\n    year: data.year\n  }\n\n  // TODO - Rename to just state and dispatch\n  const [appState, dispatchApp] = useReducer(appReducer, initialAppState)\n  // TODO - This should move into app state\n  const [selectedAlbum, setSelectedAlbum] = useState('0');\n\n  return (\n    <AppProvider value={{\n      appState,\n      dispatchApp,\n      selectedAlbum,\n      setSelectedAlbum\n    }}>\n      <Helmet>    \n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/dom4/2.0.0/dom4.js\"></script> \n      </Helmet>\n      <div className=\"App\">\n        <ControlPanel \n          header={`Best of Best of ${data.year}`}\n        />\n        \n      </div>\n    </AppProvider>\n  )\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}